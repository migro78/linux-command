####  docker 开启2375端口
vim /usr/lib/systemd/system/docker.service
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock
systemctl daemon-reload // 1，加载docker守护线程
systemctl restart docker // 2，重启docker

--进入dockers容器
docker exec -it 775c7c9ee1e1 /bin/bash
--启动docker容器
docker start <id>
--查询docker容器
docker ps -n 5
--启动docker容器
docker start container_id

#### 上传镜像到hut.docker.com
docker login  
docker push 注册用户名/镜像名  

####  批量删除无tag的镜像 
docker images|grep none|awk '{print $3}'|xargs docker rmi
####  批量删除无用的卷
docker volume prune

####  启动docker swarm 
docker swarm init --advertise-addr 192.168.0.250

####  加入docker swarm
docker swarm join --token ip:2377

####  离开docker swarm
docker swarm leave --force  --管理节点离开


####  创建带有swarm的portainer
docker service create \
--name portainer \
--publish 9000:9000 \
--constraint 'node.role == manager' \
--mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \
--mount type=volume,src=portainer_data,dst=/data \
portainer/portainer \
-H unix:///var/run/docker.sock

docker run -d -p 9000:9000 --restart=always --name portainer -v /run/docker.sock:/var/run/docker.sock -v /home/portainer/data:/data  portainer/portainer:1.23.2

####  filebrowser
docker run -d --restart always --name filebrowser -v /opt:/optz -v $PWD/sites/root:/srv -v $PWD/conf/config.json:/etc/config.json -v $PWD/db/database.db:/etc/database.db -p 5555:80 filebrowser/filebrowser:v2.0.12

#### 安装docker compose
curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

####  docker compose 启动停止服务
docker-compose up -d 
docker-compose down

#### 启动docker swarm集群服务
docker stack deploy -c docker-compose.yml stack-demo

#### 查看dockers日志
docker logs -f zookeeper   -- 查看容器日志
journalctl --since="2019-08-2218:17:16" -u docker.service   --查看系统日志

#### 创建postgresql数据库容器
docker run -d --name postgres -e TZ="Asia/Shanghai" -v /opt/postgres/data:/var/lib/postgresql/data -e POSTGRES_PASSWORD=postgres@2019 -p 5432:5432 postgres:9.6

#### 创建mysql数据库容器
docker run -d --name mysql -p 3306:3306  -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root@2019  mysql:5.7

#### 创建redis容器
docker run -p 6379:6379 -v $PWD/data:/data --restart always --name redis -d redis:latest redis-server --appendonly yes

#### 创建zookeeper容器
docker run -p 2181:2181 --name zookeeper --restart always -d zookeeper

#### 创建java容器
docker run -d -p 8082:8082 -e TZ="Asia/Shanghai" --link redis:redis --link zookeeper:zookeeper --link postgres:postgres --name base-service imedical/base-service:latest
docker run -d -p 8084:8084 -e TZ="Asia/Shanghai" --link redis:redis --link zookeeper:zookeeper --name hospital-service imedical/hospital-service:latest
docker run -d -p 8098:8098 -e TZ="Asia/Shanghai" --link redis:redis --link zookeeper:zookeeper --name message-center imedical/message-center:latest
docker run -d -p 8099:8099 -e TZ="Asia/Shanghai" --link redis:redis --link zookeeper:zookeeper --name job-center imedical/job-center:latest
docker run -d -p 8086:8086 -e TZ="Asia/Shanghai" --link redis:redis --link zookeeper:zookeeper --link postgres:postgres --name drugstore-service imedical/drugstore-service:latest

#### 创建nginx容器
docker run -d -p 80:80 -p 443:443 -p 8000:8000 -p 8001:8001 -p 8002:8002 -p 8003:8003 -p 8004:8004 -p 8005:8005 --restart always --name nginx -v /opt/nginx/www:/opt/www -v /opt/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /opt/nginx/logs:/var/log/nginx nginx:latest

#### 创建rabbitmq容器
docker run -d -p 15672:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin --name rabbitmq --hostname=rabbitmq_1 rabbitmq:management

####  drupal 
docker run --name drupal8 --link mysql:mysql -p 7777:80 -d drupal:8.0.1
####  verynginx 
docker run -d -v $PWD/conf.d:/etc/nginx/conf.d -p 80:80 -p 443:443 camil/verynginx
http://localhost/verynginx/index.html
user: verynginx
pass: verynginx

####  caddy
docker run -d -p 2015:2015 -v $PWD:/var/www/html --name caddy abiosoft/caddy

docker run -d -v $PWD/Caddyfile:/etc/Caddyfile -v $PWD/.caddy:/root/.caddy -p 80:80 -p 443:443  --name caddy  abiosoft/caddy

docker run -d \
    -e "CADDYPATH=/etc/caddycerts" \
    -v $PWD/.caddy:/etc/caddycerts \
    -p 80:80 -p 443:443 \
    abiosoft/caddy
	
####  nacos  ####
docker run --env MODE=standalone --name nacos -d -p 8848:8848 --link mysql:mysql -v /opt/nacos/conf:/home/nacos/conf -v /opt/nacos/logs:/home/nacos/logs nacos/nacos-server

####  sentinel  ####
docker run --name sentinel -d -p 8858:8858 -d bladex/sentinel-dashboard

####  nexus3  ####
docker run -d -p 18081:8081 --name nexus3 -v /home/docker/nexus3/data:/nexus-data sonatype/nexus3
初始密码在data/admin.password文件中


1. 登录阿里云Docker Registry
$ sudo docker login --username=migro78@sina.com registry.cn-chengdu.aliyuncs.com
用于登录的用户名为阿里云账号全名，密码为开通服务时设置的密码。

您可以在访问凭证页面修改凭证密码。

2. 从Registry中拉取镜像
$ sudo docker pull registry.cn-chengdu.aliyuncs.com/migro78/special-disease:[镜像版本号]
docker tag [ImageId] migro78/special-disease

3. 将镜像推送到Registry
$ sudo docker login --username=migro78@sina.com registry.cn-chengdu.aliyuncs.com
$ sudo docker tag [ImageId] registry.cn-chengdu.aliyuncs.com/migro78/special-disease:[镜像版本号]
$ sudo docker push registry.cn-chengdu.aliyuncs.com/migro78/special-disease:[镜像版本号]