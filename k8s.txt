####  安装前操作
yum -y install epel-release
systemctl stop firewalld
systemctl disable firewalld
setenforce 0

####  安装k8s-master
yum -y install etcd kubernetes-master
vi /etc/etcd/etcd.conf
vi /etc/kubernetes/apiserver
for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler; do systemctl restart $SERVICES;systemctl enable $SERVICES;systemctl status $SERVICES ; done
etcdctl mk /atomic.io/network/config '{"Network":"172.17.0.0/16"}'


####  安装k8s-node
yum -y install flannel kubernetes-node
vi /etc/sysconfig/flanneld
vi /etc/kubernetes/config
vi /etc/kubernetes/kubelet
for SERVICES in kube-proxy kubelet docker flanneld;do systemctl restart $SERVICES;systemctl enable $SERVICES;systemctl status $SERVICES; done

在/etc/rc.d/rc.local中添加	sleep 30 && iptables -P FORWARD ACCEPT


#### 解决centos7问题： Error syncing pod, skipping: failed to "StartContainer" for "POD" with ErrImagePull: "image pull failed for registry.access.redhat.com/rhel7/pod-infrastructure:latest, this may be ####                    because there are no credentials on this request.  details: (open /etc/docker/certs.d/registry.access.redhat.com/redhat-ca.crt: no such file or directory)"

yum -y install wget
wget http://mirror.centos.org/centos/7/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm
rpm2cpio python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm | cpio -iv --to-stdout ./etc/rhsm/ca/redhat-uep.pem | tee /etc/rhsm/ca/redhat-uep.pem
docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest


#####################################################
############      命令     ##########################
#####################################################
kubectl get pods --all-namespaces -o wide
kubectl describe pod kubernetes-dashboard-4208894522-716pd -n kube-system

#### 调整应用副本数量
kubectl scale deployments/myweb --replicas=1

#### app镜像升级更新
kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2

#######  

for SERVICES in kube-proxy kubelet docker flanneld;
 do systemctl restart $SERVICES;
 systemctl status $SERVICES; 
done


#####################################################
############      通过adm安装k8s     ################
#####################################################
systemctl stop firewalld && systemctl disable firewalld 
setenforce 0 && sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config 
swapoff -a && sed -i "s/\/dev\/mapper\/centos-swap/\#\/dev\/mapper\/centos-swap/g" /etc/fstab 

yum install -y wget
wget -O /etc/yum.repos.d/CentOS7-Aliyun.repo http://mirrors.aliyun.com/repo/Centos-7.repo 


vi /etc/hosts

192.168.0.70   k8s-master
192.168.0.71   k8s-node1
192.168.0.72   k8s-node2

echo "k8s-master" > /etc/hostname
hostname k8s-master

echo "k8s-node1" > /etc/hostname
hostname k8s-node1

echo "k8s-node2" > /etc/hostname
hostname k8s-node2

1.安装docker
安装阿里云docker源： 
wget -O /etc/yum.repos.d/docker-ce.repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum install -y docker-ce-18.06.3.ce

systemctl enable docker && systemctl start docker

echo '{"registry-mirrors":["https://gyxusb2j.mirror.aliyuncs.com","https://registry.docker-cn.com"],"exec-opts": ["native.cgroupdriver=systemd"]}' > /etc/docker/daemon.json

systemctl daemon-reload && systemctl restart docker


2.安装k8s adm
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

yum install -y kubelet-1.14.1 kubeadm-1.14.1 kubectl-1.14.1

systemctl enable kubelet && systemctl start kubelet

3.配置 k8sadm master
kubeadm init --kubernetes-version=v1.14.1 --pod-network-cidr=10.17.0.0/16 --ignore-preflight-errors=all

mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f calico.yaml


4.配置 k8sadm slave

kubeadm join 192.168.0.70:6443 --token v3o2m8.uqvveyu70140wsg8 \
    --discovery-token-ca-cert-hash sha256:03264c87a65c76e292bc904b72d6fa1e057c0a0fdd8aba648ae04c2159ac2266  --ignore-preflight-errors=all


#######

kubectl get pod -n kube-system -owide 

kubeadm join 192.168.0.70:6443 --token errl2n.67bydx6pmnaej1k6 \
    --discovery-token-ca-cert-hash sha256:f44f1296d7903d67061c3521c022cecde0125ad5106820f1a93c634f54c5977e

